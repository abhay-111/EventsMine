{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\abhay\\\\OneDrive\\\\Desktop\\\\Eventzmine-frontend\\\\eventzmine\\\\src\\\\components\\\\BookTicket\\\\Bookticket.js\";\nimport React, { Component } from \"react\";\nimport Navbarr from \"../Navbar/Navbar\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport Serverservice from \"../../Services/Serverservice\";\nexport default class Bookticket extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: {\n        noofticket: \"\",\n        ticketPrice: 0,\n        address: \"\",\n        postal_code: \"\",\n        city: \"\",\n        amount: 0\n      },\n      event: {}\n    };\n\n    this.bookTicket = token => {\n      const data = {\n        token: token,\n        event: this.state.event,\n        amount: 200\n      };\n      Serverservice.bookticket(data).then(response => {\n        console.log(response);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onChange = event => {\n      const input = this.state.input;\n      input[event.target.name] = event.target.value;\n      this.setState({\n        input: input\n      });\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(id);\n    const data = {\n      amount: this.state.input.amount,\n      postal_code: this.state.input.postal_code,\n      city: this.state.input.city,\n      address: this.state.input.address\n    };\n    Serverservice.eventdetail(data).then(response => {\n      this.setState({\n        event: response.data.event,\n        ticketPrice: response.data.event.ticketPrice\n      });\n      console.log(this.state.event);\n      console.log(response);\n    }).catch(err => {\n      console.log(err.response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbarr, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridAddress1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"1234 Main St\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridAddress2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Apartment, studio, or floor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridCity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridState\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              defaultValue: \"Choose...\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridZip\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Zip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"formGridCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Check me out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StripeCheckout, {\n        stripeKey: \"pk_test_51Hp8UIADAJ7Tatd8OqTodI3sQLWaBaErZlWm3K76Jy2zZadBpR8HZZOVIg8mN1ZV2i0k42N2i3TjR4iGDXpil3JV00LldPAdBy\",\n        name: \"Buy Tickets\",\n        token: this.bookTicket,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bookbutton mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              color: \"white\",\n              textDecoration: \"none\"\n            } // href={\"/booktickets/\" + this.props.match.params.id}\n            ,\n            children: \"Book Tickets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/abhay/OneDrive/Desktop/Eventzmine-frontend/eventzmine/src/components/BookTicket/Bookticket.js"],"names":["React","Component","Navbarr","Container","Row","Col","Button","Form","StripeCheckout","Serverservice","Bookticket","state","input","noofticket","ticketPrice","address","postal_code","city","amount","event","bookTicket","token","data","bookticket","then","response","console","log","catch","err","onChange","target","name","value","setState","componentDidMount","id","props","match","params","eventdetail","render","color","textDecoration"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Navbarr from \"../Navbar/Navbar\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport Serverservice from \"../../Services/Serverservice\";\r\nexport default class Bookticket extends Component {\r\n  state = {\r\n    input: {\r\n      noofticket: \"\",\r\n      ticketPrice: 0,\r\n      address: \"\",\r\n      postal_code: \"\",\r\n      city: \"\",\r\n      amount: 0,\r\n    },\r\n    event: {},\r\n  };\r\n  bookTicket = (token) => {\r\n    const data = {\r\n      token: token,\r\n      event: this.state.event,\r\n      amount: 200,\r\n    };\r\n    Serverservice.bookticket(data)\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  onChange = (event) => {\r\n    const input = this.state.input;\r\n    input[event.target.name] = event.target.value;\r\n\r\n    this.setState({\r\n      input: input,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    console.log(id);\r\n    const data = {\r\n      amount: this.state.input.amount,\r\n      postal_code: this.state.input.postal_code,\r\n      city: this.state.input.city,\r\n      address: this.state.input.address,\r\n    };\r\n    Serverservice.eventdetail(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          event: response.data.event,\r\n          ticketPrice: response.data.event.ticketPrice,\r\n        });\r\n        console.log(this.state.event);\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbarr />\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Group controlId=\"formGridAddress1\">\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control placeholder=\"1234 Main St\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridAddress2\">\r\n            <Form.Label>Address 2</Form.Label>\r\n            <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                <option>Choose...</option>\r\n                <option>...</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridZip\">\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Group id=\"formGridCheckbox\">\r\n            <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n        <StripeCheckout\r\n          stripeKey=\"pk_test_51Hp8UIADAJ7Tatd8OqTodI3sQLWaBaErZlWm3K76Jy2zZadBpR8HZZOVIg8mN1ZV2i0k42N2i3TjR4iGDXpil3JV00LldPAdBy\"\r\n          name=\"Buy Tickets\"\r\n          token={this.bookTicket}\r\n        >\r\n          <button type=\"submit\" className=\"bookbutton mt-5\">\r\n            <a\r\n              style={{ color: \"white\", textDecoration: \"none\" }}\r\n              // href={\"/booktickets/\" + this.props.match.params.id}\r\n            >\r\n              Book Tickets\r\n            </a>\r\n          </button>\r\n        </StripeCheckout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}